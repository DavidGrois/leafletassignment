
//definition of the function onClick
function onClick(evt){
	alert(evt.latlng);
}
*/
//map.addEventListener('click', onClick);

//short version (on is an alias for addEventListener):
//map.on('click', onClick);

//
//---- Part 5: Adding GeoJSON features and interactivity
//

// var parks

// function zoomToFeature(e) {
//   map.fitBounds(e.target.getBounds())
// }

// parks = L.geoJson(npark, {
//   style: {
//     color: '#D34137',
//     weight: 5
//   },
//   onEachFeature: function (feature, layer) {
//     layer.on('click', zoomToFeature)
//   }
//   //you can also write:
//   //layer.on({click: zoomToFeature}); }
// })

// parks.addTo(map)

//
//---- Part 6: Adding GeoJSON features and several forms of interactivity
//comment out part 5 before testing part 6

function highlightFeature(e) {
  var activefeature = e.target //access to activefeature that was hovered over through e.target

  activefeature.setStyle({
    weight: 5,
    color: '#666',
    dashArray: '',
    fillOpacity: 0.7
  })

  if (!L.Browser.ie && !L.Browser.opera) {
    activefeature.bringToFront()
  }
}

//function for resetting the highlight
function resetHighlight(e) {
  parks.resetStyle(e.target)
}

function zoomToFeature(e) {
  map.fitBounds(e.target.getBounds())
}

//to call these methods we need to add listeners to our features

function interactiveFunction(feature, layer) {
  layer.on({
    mouseover: highlightFeature,
    mouseout: resetHighlight,
    click: zoomToFeature
  })
}

// var myParkStyle = {
//   color: '#D34137',
//   weight: 5,
//   opacity: 0.65
// }

// parks = L.geoJson(npark, {
//   style: myParkStyle,
//   onEachFeature: interactiveFunction
// }).addTo(map)

//
//---- Part 7: adding GeoJSON point features to marker object
//

//Task: extend the content of the Popup with the height information and the latlng coordinates of the summits

// var summitsJson = {
//   type: 'FeatureCollection',
//   features: [
//     {
//       type: 'Feature',
//       properties: { NAME: 'Kreuzkogel', HEIGHT: 2027 },
//       geometry: {
//         type: 'Point',
//         coordinates: [13.153268433907614, 47.22421002245328]
//       }
//     },
//     {
//       type: 'Feature',
//       properties: { NAME: 'Fulseck', HEIGHT: 2034 },
//       geometry: {
//         type: 'Point',
//         coordinates: [13.147417093794559, 47.23423788545316]
//       }
//     },
//     {
//       type: 'Feature',
//       properties: { NAME: 'Kieserl', HEIGHT: 1953 },
//       geometry: {
//         type: 'Point',
//         coordinates: [13.152967420479607, 47.24300413792524]
//       }
//     }
//   ]
// }

// var myIconsummit = L.icon({
//   iconUrl: 'css/images/marker-icon.png',
//   iconSize: [18, 28]
// })

// var summits = L.geoJson(summitsJson, {
//   pointToLayer: function (feature, latlng) {
//     return L.marker(latlng, {
//       icon: myIconsummit,
//       title: 'Summits in Salzburg'
//     })
//   },
//   onEachFeature: function (feature, marker) {
//     marker.bindPopup(
//       'Summit: <strong>' +
//         feature.properties.NAME +
//         '</strong><br>Hight: <strong><i>' +
//         feature.properties.HEIGHT +
//         '</i></strong>'
//     )
//   }
// })

// summits.addTo(map)

//
//---- Part 8: Adding a layer control for base maps and feature layers
//